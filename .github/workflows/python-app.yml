# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: AutoPoke

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.9.12"
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
        then pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run packing
      run: |
        pyinstaller ./AutoPoke.spec

    - name: Run artifact
      run: |
        mkdir AutoPoke-Win
        cp ./dist/AutoPoke.exe ./AutoPoke-win/AutoPoke.exe
    - name: Packing AutoPoke-Win
      uses: actions/upload-artifact@v4
      with:
        name: AutoPoke-Win-old-origin
        path: ./AutoPoke-Win
    - name: Ready for Packing
      #run: |
      #  mkdir ./OlivOS-Win/lib
      #  curl -L https://github.com/Mrs4s/go-cqhttp/releases/latest/download/go-cqhttp_windows_amd64.exe -o ./OlivOS-Win/lib/go-cqhttp.exe
      #  curl -L https://github.com/onebot-walle/walle-q/releases/latest/download/walle-q-i686-windows-gnu.exe -o ./OlivOS-Win/lib/walle-q.exe
      run: |
        mkdir ./AutoPoke-Win/lib
    - name: Packing AutoPoke-Win-with-lib
      uses: actions/upload-artifact@v4
      with:
        name: AutoPoke-Win-old
        path: ./AutoPoke-Win
